<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="paymentMapper">
	<!-- 查询表格数据 -->
	<select id="listPage" resultType="pd" parameterType="page">
		select
		p.ID,
		p.`CODE`,
		p.`NAME`,
		p.ITEM_NAME,
		p.TYPE,
		p.CREATE_USER,
		p.CREATE_TIME,
		u.`NAME` USERNAME
		from bd_payment p
		LEFT JOIN sys_user u on p.CREATE_USER = u.USERNAME
		where
		p.ISDEL = '0'
		<if test="pd.KEYW != null and pd.KEYW != ''">
			and
			(
			p.CODE LIKE CONCAT(CONCAT('%',#{pd.KEYW}),'%')
			or
			p.NAME LIKE CONCAT(CONCAT('%',#{pd.KEYW}),'%')
			)
		</if>
		<choose>
			<when test="pd.sortKey != null and pd.sortKey != ''">
				order by p.${pd.sortKey} ${pd.sortMethod}
			</when>
			<otherwise>
				order by p.`NAME`, p.CODE
			</otherwise>
		</choose>
	</select>
	
	<!-- 	新增薪酬数据 -->
	<insert id="add" parameterType="pd" keyProperty="ID">
		INSERT INTO bd_payment
			(CODE, NAME, ITEM_NAME, TYPE, CREATE_USER, CREATE_TIME, ISDEL)
		VALUES(
			#{CODE}, #{NAME}, #{ITEM_NAME}, #{TYPE}, #{CREATE_USER}, #{CREATE_TIME}, 0
		)

	</insert>
	
	<!-- 	根据id查询数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select * from bd_payment where ISDEL = 0
		<if test="ID != null and ID != ''">
			and ID = #{ID}
		</if>
	</select>
		
	<!--   	 保存修改 -->
	<update id="edit" parameterType="pd">
		update bd_payment
		 set CODE = #{CODE},
		 NAME = #{NAME},
		 TYPE = #{TYPE}
		 where 0 = 0
		 <if test="ID!=null and ID!=''">
		 and ID = #{ID}
		 </if>
		 
	</update>
	
	<!--逻辑删除数据 -->
	<update id="delete" parameterType="pd">
		update bd_payment
		set ISDEL = 1
		<if test="ID!=null and ID!=''">
		where ID = #{ID}
		</if>
	</update>
	
	<select id="checkExist" parameterType="pd" resultType="pd">
		SELECT * FROM
		bd_payment t
		WHERE (t.NAME = #{NAME} OR t.CODE = #{CODE} OR t.ITEM_NAME=#{ITEM_NAME})
		AND t.ISDEL = 0
		<if test="ID != null and ID != ''">
		AND t.ID != #{ID}
		</if>
	</select>
		
	<select id="checkHasUsed" parameterType="pd" resultType="Integer">
		SELECT
			count(1)
		FROM
			sal_formula_detail d
		LEFT JOIN sal_formula f ON d.PID = f.ID
		WHERE
			f.ISDEL = 0
		AND d.BS_ID = #{ID}
	</select>
	
	<!-- 更新公式里基础项的名称 -->
	<update id="updateSalFormula" parameterType="pd">
		update sal_formula s 
		set FORMULA = replace((select group_concat(ITEM_VALUE) from sal_formula_detail where PID = s.ID), ',' , '')
		where ISDEL=0 
		and ID in (select distinct(PID) from sal_formula_detail where BS_ID = #{paymentItemId})
	</update>
	
	<!-- 更新公式里基础项的名称 -->
	<update id="updateSalFormulaDetail" parameterType="pd">
		update sal_formula_detail d set ITEM_VALUE = (select NAME from bd_payment where ID=d.BS_ID)
		where BS_ID = #{paymentItemId}
	</update>
	
</mapper>